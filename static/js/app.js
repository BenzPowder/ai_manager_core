console.log("üîπ app.js loaded successfully");

// ‡πÅ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á Agent
function setupCreateAgentForm() {
    const form = document.getElementById("createAgentForm");
    if (!form) {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° createAgentForm");
        return;
    }

    form.addEventListener("submit", handleCreateAgentSubmit);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
function handleCreateAgentSubmit(event) {
    event.preventDefault();
    console.log("üîπ Form submitted");

    const formData = {
        agent_name: document.getElementById("agent_name")?.value?.trim() || "",
        agent_type: document.getElementById("agent_type")?.value || "",
        prompt_template: document.getElementById("prompt_template")?.value?.trim() || ""
    };

    console.log("üîπ Form Data:", formData);

    if (!formData.agent_name || !formData.agent_type || !formData.prompt_template) {
        alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á");
        return;
    }

    fetch("/api/agents/create", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
        console.log("‚úÖ Response:", data);
        if (data.message) {
            alert("‚úÖ " + data.message);
            setTimeout(() => window.location.href = "/", 2000);
        } else {
            alert("‚ùå " + data.error);
        }
    })
    .catch(error => {
        console.error("‚ùå Error:", error);
        alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
    });
}

// ‡πÅ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Webhook
function setupWebhookHandlers() {
    const webhookForm = document.getElementById("webhookForm");
    if (webhookForm) {
        webhookForm.addEventListener("submit", handleWebhookSubmit);
    }
}

async function handleWebhookSubmit(event) {
    event.preventDefault();
    const agency_name = document.getElementById("agency_name")?.value?.trim() || "";
    const webhook_url = document.getElementById("webhook_url")?.value?.trim() || "";
    const sub_agent = document.getElementById("sub_agent")?.value?.trim() || "";
    const result = document.getElementById("webhook_result");

    if (!agency_name || !webhook_url) {
        if (result) {
            result.textContent = "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö";
            result.classList.add("text-red-500");
        }
        return;
    }

    try {
        const response = await fetch('/api/webhooks/create', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ agency_name, webhook_url, sub_agent })
        });

        const data = await response.json();
        
        if (result) {
            if (response.ok) {
                result.textContent = "‚úÖ Webhook ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!";
                result.classList.add("text-green-500");
            } else {
                result.textContent = `‚ùå Error: ${data.error}`;
                result.classList.add("text-red-500");
            }
        }
    } catch (error) {
        console.error("‚ùå Error:", error);
        if (result) {
            result.textContent = "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Webhook";
            result.classList.add("text-red-500");
        }
    }
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ DOM ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener("DOMContentLoaded", () => {
    console.log("üîπ DOM Loaded");
    setupCreateAgentForm();
    setupWebhookHandlers();
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö generate webhook URL
async function generateWebhookUrl() {
    try {
        const response = await fetch('/generate_webhook_url');
        const data = await response.json();
        const webhookInput = document.getElementById("webhook_url");
        if (webhookInput) {
            webhookInput.value = data.webhook_url;
        }
    } catch (error) {
        console.error("‚ùå Error generating webhook URL:", error);
        alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Webhook URL");
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å webhook URL
async function copyWebhookUrl() {
    const webhookInput = document.getElementById("webhook_url");
    if (webhookInput?.value) {
        try {
            await navigator.clipboard.writeText(webhookInput.value);
            alert("‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Webhook URL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        } catch (error) {
            console.error("‚ùå Error copying webhook URL:", error);
            alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å URL");
        }
    }
}
